-- apply changes
create table address (
  id                            bigint generated by default as identity not null,
  userDetailId                  bigint,
  country                       integer,
  state                         integer,
  city                          varchar(255),
  addressLine1                  varchar(255) default '',
  addressLine2                  varchar(255) default '',
  postCode                      varchar(255) default '',
  addressType                   varchar(8),
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_address_country check ( country in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249)),
  constraint ck_address_state check ( state in (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51)),
  constraint ck_address_addressType check ( addressType in ('home','billing','shipping','unknown')),
  constraint pk_address primary key (id)
);

create table confirmation_tokens (
  id                            bigint generated by default as identity not null,
  userId                        bigint,
  token                         varchar(255) not null,
  type                          varchar(14) not null,
  expiresAt                     timestamptz not null,
  confirmedAt                   timestamptz,
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_confirmation_tokens_type check ( type in ('email','password_reset')),
  constraint pk_confirmation_tokens primary key (id)
);

create table license_types (
  id                            bigint generated by default as identity not null,
  name                          varchar(255),
  description                   varchar(255) default '',
  access                        varchar(255) default '',
  status                        varchar(8),
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_license_types_status check ( status in ('enabled','disabled','deleted')),
  constraint pk_license_types primary key (id)
);

create table provider_accounts (
  id                            bigint generated by default as identity not null,
  userId                        bigint,
  provider                      varchar(255) default '',
  profileLink                   varchar(255) default '',
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint pk_provider_accounts primary key (id)
);

create table users (
  id                            bigint generated by default as identity not null,
  username                      varchar(255) default '',
  email                         varchar(255),
  password                      varchar(255),
  isVerified                    boolean default false not null,
  locked                        boolean default false not null,
  status                        varchar(8),
  licenseTypeId                 bigint,
  userRoleId                    bigint,
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_users_status check ( status in ('enabled','disabled','deleted')),
  constraint pk_users primary key (id)
);

create table user_details (
  id                            bigint generated by default as identity not null,
  userId                        bigint,
  profilePicture                varchar(255),
  firstName                     varchar(255) default '',
  otherNames                    varchar(100),
  lastName                      varchar(100),
  gender                        varchar(7),
  dateOfBirth                   timestamptz default '2020-04-26 00:00',
  placeOfBirth                  varchar(255) default '',
  prefix                        varchar(255) default '',
  title                         varchar(100),
  memo                          TEXT,
  lastLogin                     timestamptz default '2020-04-26 00:00',
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_user_details_gender check ( gender in ('female','male','unknown')),
  constraint pk_user_details primary key (id)
);

create table user_permissions (
  id                            bigint generated by default as identity not null,
  name                          varchar(255) default '',
  code                          varchar(255) default '',
  description                   varchar(255) default '',
  status                        varchar(8) default 'disabled',
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_user_permissions_status check ( status in ('enabled','disabled','deleted')),
  constraint pk_user_permissions primary key (id)
);

create table user_roles (
  id                            bigint generated by default as identity not null,
  name                          varchar(255) default '',
  description                   TEXT,
  capabilities                  TEXT,
  status                        varchar(8),
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint ck_user_roles_status check ( status in ('enabled','disabled','deleted')),
  constraint pk_user_roles primary key (id)
);

create table user_role_permissions (
  id                            bigint generated by default as identity not null,
  roleId                        bigint,
  permissionId                  bigint,
  createdAt                     timestamptz default '2020-04-26 00:00' not null,
  updatedAt                     timestamptz default '2020-04-26 00:00' not null,
  constraint pk_user_role_permissions primary key (id)
);

create index ix_address_userDetailId on address (userDetailId);
alter table address add constraint fk_address_userDetailId foreign key (userDetailId) references user_details (id) on delete restrict on update restrict;

create index ix_confirmation_tokens_userId on confirmation_tokens (userId);
alter table confirmation_tokens add constraint fk_confirmation_tokens_userId foreign key (userId) references users (id) on delete restrict on update restrict;

create index ix_provider_accounts_userId on provider_accounts (userId);
alter table provider_accounts add constraint fk_provider_accounts_userId foreign key (userId) references users (id) on delete restrict on update restrict;

create index ix_users_licenseTypeId on users (licenseTypeId);
alter table users add constraint fk_users_licenseTypeId foreign key (licenseTypeId) references license_types (id) on delete restrict on update restrict;

create index ix_users_userRoleId on users (userRoleId);
alter table users add constraint fk_users_userRoleId foreign key (userRoleId) references user_roles (id) on delete restrict on update restrict;

create index ix_user_details_userId on user_details (userId);
alter table user_details add constraint fk_user_details_userId foreign key (userId) references users (id) on delete restrict on update restrict;

create index ix_user_role_permissions_roleId on user_role_permissions (roleId);
alter table user_role_permissions add constraint fk_user_role_permissions_roleId foreign key (roleId) references user_roles (id) on delete restrict on update restrict;

create index ix_user_role_permissions_permissionId on user_role_permissions (permissionId);
alter table user_role_permissions add constraint fk_user_role_permissions_permissionId foreign key (permissionId) references user_permissions (id) on delete restrict on update restrict;

